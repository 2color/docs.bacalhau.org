"use strict";(self.webpackChunkbacalhau_docs=self.webpackChunkbacalhau_docs||[]).push([[8410],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(t),m=r,h=d["".concat(s,".").concat(m)]||d[m]||p[m]||l;return t?a.createElement(h,o(o({ref:n},u),{},{components:t})):a.createElement(h,o({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var c=2;c<l;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7739:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var a=t(7462),r=(t(7294),t(3905));const l={},o="Running a simple R script",i={unversionedId:"examples/workload-onboarding/r-hello-world/index",id:"examples/workload-onboarding/r-hello-world/index",title:"Running a simple R script",description:"You can choose the official standard containers for each language like R",source:"@site/docs/examples/workload-onboarding/r-hello-world/index.md",sourceDirName:"examples/workload-onboarding/r-hello-world",slug:"/examples/workload-onboarding/r-hello-world/",permalink:"/examples/workload-onboarding/r-hello-world/",draft:!1,editUrl:"https://github.com/bacalhau-project/docs.bacalhau.org/blob/main/docs/examples/workload-onboarding/r-hello-world/index.md",tags:[],version:"current",frontMatter:{},sidebar:"documentationSidebar",previous:{title:"Building and Running your Custom R Containers on Bacalhau",permalink:"/examples/workload-onboarding/r-custom-docker-prophet/"},next:{title:"Data Ingestion",permalink:"/examples/data-ingestion/"}},s={},c=[{value:"<strong>Running Locally</strong>",id:"running-locally",level:2},{value:"<strong>Running on bacalhau</strong>",id:"running-on-bacalhau",level:2}],u={toc:c};function p(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"running-a-simple-r-script"},"Running a simple R script"),(0,r.kt)("h1",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"You can choose the official standard containers for each language like R"),(0,r.kt)("p",null,"and run them on bacalhau, please make sure that you have all the dependencies installed and the scripts shouldn\u2019t make any external requests or install dependencies as networking is disabled in bacalhau"),(0,r.kt)("h2",{id:"running-locally"},(0,r.kt)("strong",{parentName:"h2"},"Running Locally")),(0,r.kt)("p",null,"To install R follow these instructions ",(0,r.kt)("a",{parentName:"p",href:"https://rstudio-education.github.io/hopr/starting.html"},"A Installing R and RStudio | Hands-On Programming with R")," "),(0,r.kt)("p",null,"After R and RStudio is installed"),(0,r.kt)("p",null,"Create a Script called hello.R"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://colab.research.google.com/github/bacalhau-project/examples/blob/main/workload-onboarding/r-hello-world/index.ipynb"},(0,r.kt)("img",{parentName:"a",src:"https://colab.research.google.com/assets/colab-badge.svg",alt:"Open In Colab"})),"\n",(0,r.kt)("a",{parentName:"p",href:"https://mybinder.org/v2/gh/bacalhau-project/examples/HEAD?labpath=workload-onboarding/r-hello-world/index.ipynb"},(0,r.kt)("img",{parentName:"a",src:"https://mybinder.org/badge.svg",alt:"Open In Binder"}))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'%%writefile hello.R\nprint("hello world")\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Overwriting hello.R\n")),(0,r.kt)("p",null,"the print() function is used to print output in R"),(0,r.kt)("p",null,"Run the script"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"Rscript hello.R\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'[1] "hello world"\n')),(0,r.kt)("p",null,"Install and start IPFS"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://dist.ipfs.io/go-ipfs/v0.4.2/go-ipfs_v0.4.2_linux-amd64.tar.gz\ntar xvfz go-ipfs_v0.4.2_linux-amd64.tar.gz\nmv go-ipfs/ipfs /usr/local/bin/ipfs\nipfs init\nipfs cat /ipfs/QmYwAPJzv5CZsnA625s3Xf2nemtYgPpHdWEz79ojWnPbdG/readme\nipfs config Addresses.Gateway /ip4/127.0.0.1/tcp/8082\nipfs config Addresses.API /ip4/127.0.0.1/tcp/5002\nnohup ipfs daemon > startup.log &\n")),(0,r.kt)("p",null,"If the script runs successfully, Add the hello.R script to IPFS, using the ipfs add command"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ipfs add hello.R\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"21 B / 21 B  100.00 % 0\x1b[2K\nadded QmVHSWhAL7fNkRiHfoEJGeMYjaYZUsKHvix7L54SptR8ie hello.R\n")),(0,r.kt)("h2",{id:"running-on-bacalhau"},(0,r.kt)("strong",{parentName:"h2"},"Running on bacalhau")),(0,r.kt)("p",null,"To run the script we are using r-base as a container And mounting the Uploaded CID to it"),(0,r.kt)("p",null,"Command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"bacalhau docker run \\\n -v QmQRVx3gXVLaRXywgwo8GCTQ63fHqWV88FiwEqCidmUGhk:/hello.R \\\n r-base \\\n-- Rscript hello.R\n")),(0,r.kt)("p",null,"Insalling bacalhau"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl -sL https://get.bacalhau.org/install.sh | bash\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Your system is linux_amd64\n\nBACALHAU CLI is detected:\nClient Version: v0.2.5\nServer Version: v0.2.5\nReinstalling BACALHAU CLI - /usr/local/bin/bacalhau...\nGetting the latest BACALHAU CLI...\nInstalling v0.2.5 BACALHAU CLI...\nDownloading https://github.com/filecoin-project/bacalhau/releases/download/v0.2.5/bacalhau_v0.2.5_linux_amd64.tar.gz ...\nDownloading sig file https://github.com/filecoin-project/bacalhau/releases/download/v0.2.5/bacalhau_v0.2.5_linux_amd64.tar.gz.signature.sha256 ...\nVerified OK\nExtracting tarball ...\nNOT verifying Bin\nbacalhau installed into /usr/local/bin successfully.\nClient Version: v0.2.5\nServer Version: v0.2.5\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"bacalhau docker run \\\n--wait \\\n--wait-timeout-secs 1000 \\\n--id-only \\\n-v QmQRVx3gXVLaRXywgwo8GCTQ63fHqWV88FiwEqCidmUGhk:/hello.R \\\nr-base \\\n-- Rscript hello.R\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"c1334838-d75e-413c-b5d1-2a8cf3a0e847\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"%env JOB_ID={job_id}\n")),(0,r.kt)("p",null,"Running the commands will output a UUID (like ",(0,r.kt)("inlineCode",{parentName:"p"},"54506541-4eb9-45f4-a0b1-ea0aecd34b3e"),"). This is the ID of the job that was created. You can check the status of the job with the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"bacalhau list --id-filter ${JOB_ID}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\x1b[92;100m CREATED  \x1b[0m\x1b[92;100m ID       \x1b[0m\x1b[92;100m JOB                     \x1b[0m\x1b[92;100m STATE     \x1b[0m\x1b[92;100m VERIFIED \x1b[0m\x1b[92;100m PUBLISHED               \x1b[0m\n\x1b[97;40m 17:53:19 \x1b[0m\x1b[97;40m c1334838 \x1b[0m\x1b[97;40m Docker r-base Rscrip... \x1b[0m\x1b[97;40m Completed \x1b[0m\x1b[97;40m          \x1b[0m\x1b[97;40m /ipfs/QmQ1Yci2Gbptoc... \x1b[0m\n")),(0,r.kt)("p",null,'Where it says "',(0,r.kt)("inlineCode",{parentName:"p"},"Published "),'", that means the job is done, and we can get the results.'),(0,r.kt)("p",null,"To find out more information about your job, run the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"bacalhau describe  ${JOB_ID}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'JobAPIVersion: ""\nID: c1334838-d75e-413c-b5d1-2a8cf3a0e847\nRequesterNodeID: QmYgxZiySj3MRkwLSL4X2MF5F9f2PMhAE3LV49XkfNL1o3\nClientID: 2f3ace1e78ecef12af7b0547496393f45508eb8ab9c5c71dbcd56a867dab46cb\nSpec:\n    Engine: 2\n    Verifier: 1\n    Publisher: 4\n    Docker:\n        Image: r-base\n        Entrypoint:\n            - Rscript\n            - hello.R\n    inputs:\n        - Engine: 1\n          Cid: QmQRVx3gXVLaRXywgwo8GCTQ63fHqWV88FiwEqCidmUGhk\n          path: /hello.R\n    outputs:\n        - Engine: 1\n          Name: outputs\n          path: /outputs\n    Sharding:\n        BatchSize: 1\n        GlobPatternBasePath: /inputs\nDeal:\n    Concurrency: 1\nCreatedAt: 2022-10-01T17:53:19.581955821Z\nJobState:\n    Nodes:\n        QmXaXu9N5GNetatsvwnTfQqNtSeKAD6uCmarbh3LMRYAcF:\n            Shards:\n                0:\n                    NodeId: QmXaXu9N5GNetatsvwnTfQqNtSeKAD6uCmarbh3LMRYAcF\n                    ShardIndex: 0\n                    State: 7\n                    Status: \'Got results proposal of length: 0\'\n                    VerificationProposal: []\n                    VerificationResult:\n                        Complete: true\n                        Result: true\n                    PublishedResults:\n                        Engine: 1\n                        Name: job-c1334838-d75e-413c-b5d1-2a8cf3a0e847-shard-0-host-QmXaXu9N5GNetatsvwnTfQqNtSeKAD6uCmarbh3LMRYAcF\n                        Cid: QmQ1Yci2GbptoccHy46txBK28gtnbKcb7nvFNHYpS6Gbn7\n                    RunOutput:\n                        Stdout: \'[1] "hello world"\'\n                        StdoutTruncated: false\n                        Stderr: ""\n                        StderrTruncated: false\n                        ExitCode: 0\n                        RunnerError: ""\n')),(0,r.kt)("p",null,"Since there is no error we can\u2019t see any error instead we see the state of our job to be complete, that means\nwe can download the results!\nwe create a temporary directory to save our results"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir results\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"mkdir: cannot create directory \u2018results\u2019: File exists\n")),(0,r.kt)("p",null,"To Download the results of your job, run "),(0,r.kt)("hr",null),(0,r.kt)("p",null,"the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"bacalhau get ${JOB_ID} --output-dir results\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\x1b[90m17:53:36.606 |\x1b[0m \x1b[32mINF\x1b[0m \x1b[1mbacalhau/get.go:67\x1b[0m\x1b[36m >\x1b[0m Fetching results of job 'c1334838-d75e-413c-b5d1-2a8cf3a0e847'...\n2022/10/01 17:53:36 failed to sufficiently increase receive buffer size (was: 208 kiB, wanted: 2048 kiB, got: 416 kiB). See https://github.com/lucas-clemente/quic-go/wiki/UDP-Receive-Buffer-Size for details.\n\x1b[90m17:53:46.792 |\x1b[0m \x1b[32mINF\x1b[0m \x1b[1mipfs/downloader.go:115\x1b[0m\x1b[36m >\x1b[0m Found 1 result shards, downloading to temporary folder.\n\x1b[90m17:53:48.178 |\x1b[0m \x1b[32mINF\x1b[0m \x1b[1mipfs/downloader.go:195\x1b[0m\x1b[36m >\x1b[0m Combining shard from output volume 'outputs' to final location: '/content/results'\n")),(0,r.kt)("p",null,"After the download has finished you should\nsee the following contents in results directory"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ls results/\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"shards  stderr  stdout  volumes\n")),(0,r.kt)("p",null,"Viewing the result"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cat results/stdout\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'[1] "hello world"\n')),(0,r.kt)("p",null,"Mounting the script from a URL in this case a github gist"),(0,r.kt)("p",null,"Command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"bacalhau docker run \\\n-u https://gist.github.com/js-ts/7a865dda1e1f968e4de86fcc4e710dad:/hello.R \\\nr-base \\\n-- Rscript hello.R\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"bacalhau describe ${JOB_ID} --spec > job.yaml\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cat job.yaml\n")))}p.isMDXComponent=!0}}]);