"use strict";(self.webpackChunkbacalhau_docs=self.webpackChunkbacalhau_docs||[]).push([[8270],{3905:(e,t,n)=>{n.d(t,{Zo:()=>i,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},i=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,i=p(e,["components","mdxType","originalType","parentName"]),d=u(n),h=r,m=d["".concat(s,".").concat(h)]||d[h]||c[h]||o;return n?a.createElement(m,l(l({ref:t},i),{},{components:n})):a.createElement(m,l({ref:t},i))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=d;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:r,l[1]=p;for(var u=2;u<o;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3373:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>p,toc:()=>u});var a=n(7462),r=(n(7294),n(3905));const o={},l="Building and Running your Custom R Containers on Bacalhau",p={unversionedId:"examples/workload-onboarding/r-custom-docker-prophet/index",id:"examples/workload-onboarding/r-custom-docker-prophet/index",title:"Building and Running your Custom R Containers on Bacalhau",description:"Introduction",source:"@site/docs/examples/workload-onboarding/r-custom-docker-prophet/index.md",sourceDirName:"examples/workload-onboarding/r-custom-docker-prophet",slug:"/examples/workload-onboarding/r-custom-docker-prophet/",permalink:"/examples/workload-onboarding/r-custom-docker-prophet/",draft:!1,editUrl:"https://github.com/bacalhau-project/docs.bacalhau.org/blob/main/docs/examples/workload-onboarding/r-custom-docker-prophet/index.md",tags:[],version:"current",frontMatter:{},sidebar:"documentationSidebar",previous:{title:"Running Pandas on Bacalhau",permalink:"/examples/workload-onboarding/python-pandas/"},next:{title:"Running a simple R script",permalink:"/examples/workload-onboarding/r-hello-world/"}},s={},u=[{value:"<strong>Introduction</strong>",id:"introduction",level:2},{value:"<strong>Running the script locally</strong>",id:"running-the-script-locally",level:2}],i={toc:u};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"building-and-running-your-custom-r-containers-on-bacalhau"},"Building and Running your Custom R Containers on Bacalhau"),(0,r.kt)("h2",{id:"introduction"},(0,r.kt)("strong",{parentName:"h2"},"Introduction")),(0,r.kt)("p",null,"This example will walk you through building Time Series Forecasting using Prophet "),(0,r.kt)("p",null,"Prophet is a forecasting procedure implemented in R and Python. It is fast and provides completely automated forecasts that can be tuned by hand by data scientists and analysts."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://colab.research.google.com/github/bacalhau-project/examples/blob/main/workload-onboarding/r-custom-docker-prophet/index.ipynb"},(0,r.kt)("img",{parentName:"a",src:"https://colab.research.google.com/assets/colab-badge.svg",alt:"Open In Colab"})),"\n",(0,r.kt)("a",{parentName:"p",href:"https://mybinder.org/v2/gh/bacalhau-project/examples/HEAD?labpath=workload-onboarding/r-custom-docker-prophet/index.ipynb"},(0,r.kt)("img",{parentName:"a",src:"https://mybinder.org/badge.svg",alt:"Open In Binder"}))),(0,r.kt)("h2",{id:"running-the-script-locally"},(0,r.kt)("strong",{parentName:"h2"},"Running the script locally")),(0,r.kt)("p",null,"Open R studio or R supported IDE"),(0,r.kt)("p",null,"Prophet is a CRAN package so you can use install.packages to install the prophet package"),(0,r.kt)("p",null,"Run this command in console to install prophet"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"R -e \"install.packages('prophet',dependencies=TRUE, repos='http://cran.rstudio.com/')\"\n")),(0,r.kt)("p",null,"After installation is finished"),(0,r.kt)("p",null,"Download the dataset by clicking this link"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://cloudflare-ipfs.com/ipfs/QmZiwZz7fXAvQANKYnt7ya838VPpj4agJt5EDvRYp3Deeo/example_wp_log_R.csv\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir outputs\nmkdir R\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'%%writefile Saturating-Forecasts.R\nlibrary(\'prophet\')\n\nargs = commandArgs(trailingOnly=TRUE)\nargs\n\ninput = args[1]\noutput = args[2]\noutput1 = args[3]\n\n\nI <- paste("", input, sep ="")\n\nO <- paste("", output, sep ="")\n\nO1 <- paste("", output1 ,sep ="")\n\n\ndf <- read.csv(I)\n\ndf$cap <- 8.5\nm <- prophet(df, growth = \'logistic\')\n\nfuture <- make_future_dataframe(m, periods = 1826)\nfuture$cap <- 8.5\nfcst <- predict(m, future)\npdf(O)\nplot(m, fcst)\ndev.off()\n\ndf$y <- 10 - df$y\ndf$cap <- 6\ndf$floor <- 1.5\nfuture$cap <- 6\nfuture$floor <- 1.5\nm <- prophet(df, growth = \'logistic\')\nfcst <- predict(m, future)\npdf(O1)\nplot(m, fcst)\ndev.off()\n')),(0,r.kt)("p",null,"Command to run the script"),(0,r.kt)("p",null," We provide parameters like name of the input csv dataset"),(0,r.kt)("p",null,"And Path and name of the First and second output which is a graph that is saved when the script is ran"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'Rscript Saturating-Forecasts.R "example_wp_log_R.csv" "outputs/output0.pdf" "outputs/output1.pdf"\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Setting Up Docker")),(0,r.kt)("p",null,"In this step you will create a  ",(0,r.kt)("inlineCode",{parentName:"p"},"Dockerfile")," to create your Docker deployment. The ",(0,r.kt)("inlineCode",{parentName:"p"},"Dockerfile")," is a text document that contains the commands used to assemble the image."),(0,r.kt)("p",null,"First, create the ",(0,r.kt)("inlineCode",{parentName:"p"},"Dockerfile"),"."),(0,r.kt)("p",null,"Dockerfile"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"FROM r-base\nRUN R -e \"install.packages('prophet',dependencies=TRUE, repos='http://cran.rstudio.com/')\"\nCOPY . R\nWORKDIR /R\n")),(0,r.kt)("p",null,"Next, add your desired configuration to the ",(0,r.kt)("inlineCode",{parentName:"p"},"Dockerfile"),". These commands specify how the image will be built, and what extra requirements will be included."),(0,r.kt)("p",null,"What the Dockerfile does"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"FROM r-base\n")),(0,r.kt)("p",null,"We use r-base as the base image "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"RUN R -e \"install.packages('prophet',dependencies=TRUE,repos='http://cran.rstudio.com/')\"\n")),(0,r.kt)("p",null,"install packages "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"COPY . R\n")),(0,r.kt)("p",null,"Copy the contents of your PWD which includes your scripts"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"WORKDIR /R\n")),(0,r.kt)("p",null,"Make the R directory which we copied to be the working directory"),(0,r.kt)("p",null,"Build the container"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker build -t <hub-user>/<repo-name>:<tag> .\n")),(0,r.kt)("p",null,"After you have build the container successfully, the next step is to test it locally and then push it docker hub"),(0,r.kt)("p",null,"Before pushing you first need to create a repo which you can create by following the instructions here ",(0,r.kt)("a",{parentName:"p",href:"https://docs.docker.com/docker-hub/repos/"},"https://docs.docker.com/docker-hub/repos/")),(0,r.kt)("p",null,"Now you can push this repository to the registry designated by its name or tag."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"}," docker push <hub-user>/<repo-name>:<tag>\n")),(0,r.kt)("p",null,"After the repo image has been pushed to docker hub, we can now use the container for running on bacalhau"),(0,r.kt)("p",null,"To mount your dataset there are 2 options"),(0,r.kt)("p",null,"Mounting the dataset using the -u or The URL flag"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'bacalhau docker run \\\n-u https://raw.githubusercontent.com/facebook/prophet/main/examples/example_wp_log_R.csv:/input \\\njsace/r-prophet \\\n-- Rscript Saturating-Forecasts.R "example_wp_log_R.csv" "outputs/output0.pdf" "outputs/output1.pdf"\n')),(0,r.kt)("p",null,"Mounting the dataset using CID"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'bacalhau docker run \\\n-v QmY8BAftd48wWRYDf5XnZGkhwqgjpzjyUG3hN1se6SYaFt:/example_wp_log_R.csv \\\njsace/r-prophet \\\n-- Rscript Saturating-Forecasts.R "example_wp_log_R.csv" "outputs/output0.pdf" "outputs/output1.pdf"\n')),(0,r.kt)("p",null,"Insalling bacalhau"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl -sL https://get.bacalhau.org/install.sh | bash\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'echo $(bacalhau docker run --id-only --wait --wait-timeout-secs 1000 -v QmY8BAftd48wWRYDf5XnZGkhwqgjpzjyUG3hN1se6SYaFt:/example_wp_log_R.csv jsace/r-prophet -- Rscript Saturating-Forecasts.R "example_wp_log_R.csv" "outputs/output0.pdf" "outputs/output1.pdf") > job_id.txt\ncat job_id.txt\n')),(0,r.kt)("p",null,"Running the commands will output a UUID (like ",(0,r.kt)("inlineCode",{parentName:"p"},"54506541-4eb9-45f4-a0b1-ea0aecd34b3e"),"). This is the ID of the job that was created. You can check the status of the job with the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"bacalhau list --id-filter $(cat job_id.txt)\n")),(0,r.kt)("p",null,'Where it says "',(0,r.kt)("inlineCode",{parentName:"p"},"Published "),'", that means the job is done, and we can get the results.'),(0,r.kt)("p",null,"To find out more information about your job, run the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"bacalhau describe $(cat job_id.txt)\n")),(0,r.kt)("p",null,"Since there is no error we can\u2019t see any error instead we see the state of our job to be complete, that means\nwe can download the results!\nwe create a temporary directory to save our results"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir results\n")),(0,r.kt)("p",null,"To Download the results of your job, run "),(0,r.kt)("hr",null),(0,r.kt)("p",null,"the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"bacalhau get  $(cat job_id.txt)  --output-dir results\n")),(0,r.kt)("p",null,"After the download has finished you should\nsee the following contents in results directory"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ls results/\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"bacalhau describe $(cat job_id.txt) --spec > job.yaml\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cat job.yaml\n")),(0,r.kt)("p",null,"Viewing the output pdf files which are located at volumes/outputs"),(0,r.kt)("p",null,"output0.pdf"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://i.imgur.com/dVLgpLA.png",alt:null})),(0,r.kt)("p",null,"output1.pdf"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://i.imgur.com/qvoJKdB.png",alt:null})))}c.isMDXComponent=!0}}]);