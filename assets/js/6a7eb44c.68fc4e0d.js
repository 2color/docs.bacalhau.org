"use strict";(self.webpackChunkbacalhau_docs=self.webpackChunkbacalhau_docs||[]).push([[3645],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),d=s(n),m=o,h=d["".concat(l,".").concat(m)]||d[m]||c[m]||a;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7660:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>p,toc:()=>s});var r=n(3117),o=(n(7294),n(3905));const a={sidebar_label:"Networking",sidebar_position:120},i="Networking",p={unversionedId:"running-node/networking",id:"running-node/networking",title:"Networking",description:"Bacalhau uses libp2p under the hood to communicate with other nodes on the network.",source:"@site/docs/running-node/networking.md",sourceDirName:"running-node",slug:"/running-node/networking",permalink:"/running-node/networking",draft:!1,editUrl:"https://github.com/bacalhau-project/docs.bacalhau.org/blob/main/docs/running-node/networking.md",tags:[],version:"current",sidebarPosition:120,frontMatter:{sidebar_label:"Networking",sidebar_position:120},sidebar:"documentationSidebar",previous:{title:"Install",permalink:"/running-node/install"},next:{title:"Storage Providers",permalink:"/running-node/storage-providers"}},l={},s=[{value:"Configure peers",id:"configure-peers",level:2},{value:"libp2p swarm port",id:"libp2p-swarm-port",level:2},{value:"REST api port",id:"rest-api-port",level:2}],u={toc:s};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"networking"},"Networking"),(0,o.kt)("p",null,"Bacalhau uses ",(0,o.kt)("a",{parentName:"p",href:"https://libp2p.io/"},"libp2p")," under the hood to communicate with other nodes on the network."),(0,o.kt)("h2",{id:"configure-peers"},"Configure peers"),(0,o.kt)("p",null,"By default - running ",(0,o.kt)("inlineCode",{parentName:"p"},"bacalhau serve")," will connect to the following nodes (which are thge default bootstrap nodes run by Protocol labs):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"/ip4/35.245.115.191/tcp/1235/p2p/QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\n/ip4/35.245.61.251/tcp/1235/p2p/QmXaXu9N5GNetatsvwnTfQqNtSeKAD6uCmarbh3LMRYAcF\n/ip4/35.245.251.239/tcp/1235/p2p/QmYgxZiySj3MRkwLSL4X2MF5F9f2PMhAE3LV49XkfNL1o3\n")),(0,o.kt)("p",null,"If you want to connect to other nodes - you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"--peer")," flag to specify additional peers to connect to (comma separated list)."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"bacalhau serve \\\n  --peer /ip4/35.245.115.191/tcp/1235/p2p/QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL,/ip4/35.245.61.251/tcp/1235/p2p/QmXaXu9N5GNetatsvwnTfQqNtSeKAD6uCmarbh3LMRYAcF\n")),(0,o.kt)("h2",{id:"libp2p-swarm-port"},"libp2p swarm port"),(0,o.kt)("p",null,"The default port the libp2p swarm listens on is ",(0,o.kt)("strong",{parentName:"p"},"1235"),"."),(0,o.kt)("p",null,"You can configure the swarm port using the ",(0,o.kt)("inlineCode",{parentName:"p"},"--port")," flag:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"bacalhau serve \\\n  --port 1235\n")),(0,o.kt)("p",null,"To ensure that our node can communicate with other nodes on the network - we need to make sure the swarm port is open and accesible by other nodes."),(0,o.kt)("h2",{id:"rest-api-port"},"REST api port"),(0,o.kt)("p",null,"Our bacalhau node exposes a REST api that can be used to query the node for information."),(0,o.kt)("p",null,"The default port the REST api listens on is ",(0,o.kt)("strong",{parentName:"p"},"1234"),"."),(0,o.kt)("p",null,"The default network interface the REST api listens on is ",(0,o.kt)("strong",{parentName:"p"},"0.0.0.0"),"."),(0,o.kt)("p",null,"You can configure the REST api port using the ",(0,o.kt)("inlineCode",{parentName:"p"},"--api-port")," flag:"),(0,o.kt)("p",null,"You can also configure which network interface the REST api will bind to using the ",(0,o.kt)("inlineCode",{parentName:"p"},"--host")," flag:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"bacalhau serve \\\n  --api-port 1234 \\\n  --host 127.0.0.1\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"You can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"--host")," flag to restrict network access to the REST api.")))}c.isMDXComponent=!0}}]);