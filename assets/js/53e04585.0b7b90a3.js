"use strict";(self.webpackChunkbacalhau_docs=self.webpackChunkbacalhau_docs||[]).push([[125],{3905:function(e,t,o){o.d(t,{Zo:function(){return d},kt:function(){return h}});var r=o(7294);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function n(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?n(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):n(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,r,a=function(e,t){if(null==e)return{};var o,r,a={},n=Object.keys(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var u=r.createContext({}),c=function(e){var t=r.useContext(u),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},d=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var o=e.components,a=e.mdxType,n=e.originalType,u=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(o),h=a,k=p["".concat(u,".").concat(h)]||p[h]||s[h]||n;return o?r.createElement(k,i(i({ref:t},d),{},{components:o})):r.createElement(k,i({ref:t},d))}));function h(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=o.length,i=new Array(n);i[0]=p;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<n;c++)i[c]=o[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,o)}p.displayName="MDXCreateElement"},6699:function(e,t,o){o.r(t),o.d(t,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return d},default:function(){return p}});var r=o(7462),a=o(3366),n=(o(7294),o(3905)),i=["components"],l={sidebar_label:"Onboard Your Workload",sidebar_position:2},u="Onboarding Your Workloads",c={unversionedId:"getting-started/workload-onboarding",id:"getting-started/workload-onboarding",title:"Onboarding Your Workloads",description:"Steps to onboard your workload",source:"@site/docs/getting-started/workload-onboarding.md",sourceDirName:"getting-started",slug:"/getting-started/workload-onboarding",permalink:"/getting-started/workload-onboarding",editUrl:"https://github.com/bacalhau-project/docs.bacalhau.org/blob/main/docs/getting-started/workload-onboarding.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_label:"Onboard Your Workload",sidebar_position:2},sidebar:"documentationSidebar",previous:{title:"Installation",permalink:"/getting-started/installation"},next:{title:"GPU Support",permalink:"/getting-started/gpu"}},d=[{value:"Steps to onboard your workload",id:"steps-to-onboard-your-workload",children:[{value:"1. Modify your workload scripts",id:"1-modify-your-workload-scripts",children:[],level:3},{value:"2. Build the docker container",id:"2-build-the-docker-container",children:[],level:3},{value:"3. Test the docker image locally",id:"3-test-the-docker-image-locally",children:[],level:3},{value:"4. Migrate input data for the workload to IPFS",id:"4-migrate-input-data-for-the-workload-to-ipfs",children:[],level:3},{value:"5. Run the workload on Bacalhau:",id:"5-run-the-workload-on-bacalhau",children:[],level:3}],level:2},{value:"Example Onboarded Workload",id:"example-onboarded-workload",children:[],level:2},{value:"Support",id:"support",children:[],level:2}],s={toc:d};function p(e){var t=e.components,o=(0,a.Z)(e,i);return(0,n.kt)("wrapper",(0,r.Z)({},s,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"onboarding-your-workloads"},"Onboarding Your Workloads"),(0,n.kt)("h2",{id:"steps-to-onboard-your-workload"},"Steps to onboard your workload"),(0,n.kt)("h3",{id:"1-modify-your-workload-scripts"},"1. Modify your workload scripts"),(0,n.kt)("p",null,"Modify your workload (scripts) so that any input files are read from a ",(0,n.kt)("a",{parentName:"p",href:"https://docs.bacalhau.org/about-bacalhau/architecture#input--output-volumes"},"local directory")," within the Docker container. All ingres/egres networking is disabled from the Bacalhau cluster."),(0,n.kt)("h3",{id:"2-build-the-docker-container"},"2. Build the docker container"),(0,n.kt)("p",null,"Build a an ",(0,n.kt)("strong",{parentName:"p"},"x86_64 / amd64")," based docker image for your workload (",(0,n.kt)("a",{parentName:"p",href:"https://docs.docker.com/language/python/build-images/"},"example here"),") and push the image to a ",(0,n.kt)("a",{parentName:"p",href:"https://codefresh.io/docs/docs/integrations/docker-registries/"},"public docker registry"),". Please note: do not build your docker image on a arm64 (Apple Silicon) Mac, the Bacalhau testnet is running x86_64 servers, so the docker images must be built on the same CPU architecture. You may execute bacalhau jobs from the CLI on a Mac, but please avoid building your docker images there."),(0,n.kt)("h3",{id:"3-test-the-docker-image-locally"},"3. Test the docker image locally"),(0,n.kt)("p",null,"Executing the following style of command to test your docker image locally:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"docker run -v /host-mount-location:/container-input-location/  \\\n -o output-folder-name:/container-output-location/\nIMAGENAME\n")),(0,n.kt)("h3",{id:"4-migrate-input-data-for-the-workload-to-ipfs"},"4. Migrate input data for the workload to IPFS"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Leverage an IPFS \u201cpinning service\u201d such as:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://web3.storage/account/"},"Web3.Storage")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://estuary.tech/sign-in"},"Estuary")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docs.ipfs.io/how-to/pin-files/"},"Manually pin your files to IPFS")," with your own IPFS server."))),(0,n.kt)("li",{parentName:"ul"},"If uploading a folder of input files, consider ",(0,n.kt)("a",{parentName:"li",href:"https://web3.storage/docs/#create-the-upload-script"},"uploading with this script"),". However, please note that any content uploaded to Web3.storage is ",(0,n.kt)("a",{parentName:"li",href:"https://web3.storage/docs/how-tos/store/#directory-wrapping"},"also wrapped in a parent directory"),". You will need to take care to reference the inner directory CID in your bacalhau command.")),(0,n.kt)("h3",{id:"5-run-the-workload-on-bacalhau"},"5. Run the workload on Bacalhau:"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Note:")," Bacalhau does ",(0,n.kt)("strong",{parentName:"p"},"not")," support subpaths within a CID. You must reference the CID of an atomic folder in your ",(0,n.kt)("inlineCode",{parentName:"p"},"bacalhau docker run")," command."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"bacalhau docker run -v CID:/container-input-location/ \\\n    -o output-folder-name:/container-output-location/ IMAGENAME\n\nbacalhau list \n\nbacalhau get JOB_ID\n")),(0,n.kt)("h2",{id:"example-onboarded-workload"},"Example Onboarded Workload"),(0,n.kt)("p",null,"Here is an example of an onboarded python script to Bacalhau: ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/wesfloyd/bacalhau_socat_test"},"SOCAT Test")),(0,n.kt)("h2",{id:"support"},"Support"),(0,n.kt)("p",null,"Please reach out to the ",(0,n.kt)("a",{parentName:"p",href:"https://filecoinproject.slack.com/archives/C02RLM3JHUY"},"Bacalhau team via Slack")," if you would like help pinning data to IPFS for your job or in case of any issues."))}p.isMDXComponent=!0}}]);