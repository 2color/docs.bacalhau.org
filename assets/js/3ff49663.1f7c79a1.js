"use strict";(self.webpackChunkbacalhau_docs=self.webpackChunkbacalhau_docs||[]).push([[8662],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>m});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(a),m=r,h=d["".concat(s,".").concat(m)]||d[m]||c[m]||o;return a?n.createElement(h,i(i({ref:t},u),{},{components:a})):n.createElement(h,i({ref:t},u))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},3633:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=a(3117),r=(a(7294),a(3905));const o={sidebar_label:"Image Processing",sidebar_position:1},i="Image Processing",l={unversionedId:"examples/data-engineering/image-processing/README",id:"examples/data-engineering/image-processing/README",title:"Image Processing",description:"Introduction",source:"@site/docs/examples/data-engineering/image-processing/README.md",sourceDirName:"examples/data-engineering/image-processing",slug:"/examples/data-engineering/image-processing/",permalink:"/examples/data-engineering/image-processing/",draft:!1,editUrl:"https://github.com/bacalhau-project/docs.bacalhau.org/blob/main/docs/examples/data-engineering/image-processing/README.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"Image Processing",sidebar_position:1},sidebar:"documentationSidebar",previous:{title:"Data Engineering",permalink:"/examples/data-engineering/"},next:{title:"Workload Onboarding",permalink:"/examples/workload-onboarding/"}},s={},p=[{value:"Introduction",id:"introduction",level:2},{value:"Prerequistes",id:"prerequistes",level:2},{value:"Submit the workload",id:"submit-the-workload",level:2},{value:"Get results",id:"get-results",level:2},{value:"Where to go next?",id:"where-to-go-next",level:2},{value:"Support",id:"support",level:2}],u={toc:p};function c(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"image-processing"},"Image Processing"),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"Often, you will need to process a number of images across an entire data set hosted on IPFS. For example, the entire ",(0,r.kt)("a",{parentName:"p",href:"https://ipfs.io/ipfs/QmeZRGhe4PmjctYVSVHuEiA9oSXnqmYa4kQubSHgWbjv72"},"Landsat data dataset is hosted on IPFS "),". This is many thousands of images, it would be very convenient to run a job against the data without having to download it!"),(0,r.kt)("p",null,"This page is a demo of a data intensive image processing workload run on Bacalhau that transforms very high resolution imagery into thumbnail-size pictures.\nIt is an example of a highly parallelizable compute task where a resize function is applied over a large number of files.\nFor a live walk through of this demo please watch the first part of the video below, otherwise feel free to run the demo yourself by following the steps below."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=wkOh05J5qgA"},(0,r.kt)("img",{alt:"Bacalhau Intro Video",src:a(8134).Z,width:"852",height:"485"}))),(0,r.kt)("h2",{id:"prerequistes"},"Prerequistes"),(0,r.kt)("p",null,"Make sure you have the latest ",(0,r.kt)("inlineCode",{parentName:"p"},"bacalhau")," client installed by following the ",(0,r.kt)("a",{parentName:"p",href:"../../../getting-started/installation"},"getting started instructions"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"!bacalhau version\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Client Version: v0.2.3\nServer Version: v0.2.3\n")),(0,r.kt)("h2",{id:"submit-the-workload"},"Submit the workload"),(0,r.kt)("p",null,"In this example we will be working against a small ",(0,r.kt)("a",{parentName:"p",href:"https://ipfs.io/ipfs/QmeZRGhe4PmjctYVSVHuEiA9oSXnqmYa4kQubSHgWbjv72"},"subset of the dataset"),". We will go through a demo similar to what you may need to do at scale: resizing all the images down to 100x100px."),(0,r.kt)("p",null,"To get started with a new concept, ",(0,r.kt)("inlineCode",{parentName:"p"},"bacalhau docker run")," allows you to pass input data volume with a ",(0,r.kt)("inlineCode",{parentName:"p"},"-v CID:path")," argument just like Docker, except the left hand side of the argument is a ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/multiformats/cid"},"content identifier (CID)"),".\nThis results in a ",(0,r.kt)("em",{parentName:"p"},"data volume")," and can mount in an entire directory (instead of a single file)."),(0,r.kt)("p",null,"When you set this flag, it then ensures that CID is mounted into the container at the ",(0,r.kt)("inlineCode",{parentName:"p"},"path")," location as an input volume."),(0,r.kt)("p",null,"Data volumes also work on output - by default ",(0,r.kt)("inlineCode",{parentName:"p"},"bacalhau docker run")," always creates an output data volume mounted at ",(0,r.kt)("inlineCode",{parentName:"p"},"/outputs"),".\nThis is a convenient location to store the results of your job. See below for an example."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"!bacalhau docker run \\\n  -v QmeZRGhe4PmjctYVSVHuEiA9oSXnqmYa4kQubSHgWbjv72:/input_images \\\n  dpokidov/imagemagick:7.1.0-47-ubuntu \\\n  -- magick mogrify -resize 100x100 -quality 100 -path /outputs '/input_images/*.jpg'\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"4d49f48a-0522-4016-aa0a-23168d1ca99a\n")),(0,r.kt)("p",null,"The job has been submitted and Bacalhau has printed out the related job id.\nWe store that in an environment variable so that we can reuse it later on."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"%env JOB_ID=4d49f48a\n!bacalhau list --id-filter=${JOB_ID} --no-style\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"env: JOB_ID=4d49f48a\n CREATED   ID        JOB                      STATE      VERIFIED  PUBLISHED               \n 11:33:22  4d49f48a  Docker dpokidov/imag...  Published            /ipfs/bafybeidtitnyf... \n")),(0,r.kt)("p",null,"Since the job state is published/complete, the job result can be downloaded locally.\nWe achieve that in the next section."),(0,r.kt)("h2",{id:"get-results"},"Get results"),(0,r.kt)("p",null,"First, let us create a new directory that will store our job outputs.\nSecond, use the ",(0,r.kt)("inlineCode",{parentName:"p"},"get")," verb to download the job outputs into the directory specified by the ",(0,r.kt)("inlineCode",{parentName:"p"},"--output-dir")," argument.\n",(0,r.kt)("em",{parentName:"p"},"Please ignore the ",(0,r.kt)("inlineCode",{parentName:"em"},"> /dev/null 2>&1")," portion of the command, it is there only temporarily until we fix this ",(0,r.kt)("a",{parentName:"em",href:"https://github.com/filecoin-project/bacalhau/issues/614"},"issue #614")," and is meant to supress debug logs that are not useful for the user.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"!mkdir -p /tmp/img-demo\n!bacalhau get ${JOB_ID} --output-dir /tmp/img-demo > /dev/null 2>&1\n")),(0,r.kt)("p",null,"Now, the docker run command above used the ",(0,r.kt)("inlineCode",{parentName:"p"},"outputs")," volume as a results folder so when we download them they will be stored in a homonymous folder within ",(0,r.kt)("inlineCode",{parentName:"p"},"volumes/"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"ls -l /tmp/img-demo/volumes/outputs/\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"total 384\n-rw-r--r--  1 enricorotundo  staff  14536 Sep 15 13:42 cafires_vir_2021231_lrg.jpg\n-rw-r--r--  1 enricorotundo  staff  34594 Sep 15 13:42 greatsaltlake_oli_2017210_lrg.jpg\n-rw-r--r--  1 enricorotundo  staff  12928 Sep 15 13:42 greecefires_oli_2021222_lrg.jpg\n-rw-r--r--  1 enricorotundo  staff  16705 Sep 15 13:42 haitiearthquake_oli_20212_lrg.jpg\n-rw-r--r--  1 enricorotundo  staff  42427 Sep 15 13:42 iwojima_tmo_2021225_lrg.jpg\n-rw-r--r--  1 enricorotundo  staff  10419 Sep 15 13:42 lakemead_etm_2000220_lrg.jpg\n-rw-r--r--  1 enricorotundo  staff  13467 Sep 15 13:42 lapalma_oli_2021141_lrg.jpg\n-rw-r--r--  1 enricorotundo  staff  13687 Sep 15 13:42 spainfire_oli_2021227_lrg.jpg\n-rw-r--r--  1 enricorotundo  staff  15476 Sep 15 13:42 sulphursprings_oli_2019254_lrg.jpg\n")),(0,r.kt)("h2",{id:"where-to-go-next"},"Where to go next?"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"../../../getting-started/workload-onboarding"},"How to run an existing workload on Bacalhau"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"../../../all-flags"},"Check out the Bacalhau CLI Reference page"),".")),(0,r.kt)("h2",{id:"support"},"Support"),(0,r.kt)("p",null,"Please reach out to the ",(0,r.kt)("a",{parentName:"p",href:"https://filecoinproject.slack.com/archives/C02RLM3JHUY"},"Bacalhau team via Slack")," to seek help or in case of any issues."))}c.isMDXComponent=!0},8134:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/Bacalhau_Intro_Video_thumbnail-9888836176b5ecba4f0ecca234e791b6.jpg"}}]);