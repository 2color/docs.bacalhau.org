"use strict";(self.webpackChunkbacalhau_docs=self.webpackChunkbacalhau_docs||[]).push([[9178],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>b});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=u(n),b=o,m=d["".concat(c,".").concat(b)]||d[b]||p[b]||a;return n?r.createElement(m,l(l({ref:t},s),{},{components:n})):r.createElement(m,l({ref:t},s))}));function b(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var u=2;u<a;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},604:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var r=n(3117),o=(n(7294),n(3905));const a={sidebar_label:"Test Network",sidebar_position:115},l="Test Network",i={unversionedId:"running-node/test-network",id:"running-node/test-network",title:"Test Network",description:"Before you join the main bacalhau network - you can try things out locally first.",source:"@site/docs/running-node/test-network.md",sourceDirName:"running-node",slug:"/running-node/test-network",permalink:"/running-node/test-network",draft:!1,editUrl:"https://github.com/bacalhau-project/docs.bacalhau.org/blob/main/docs/running-node/test-network.md",tags:[],version:"current",sidebarPosition:115,frontMatter:{sidebar_label:"Test Network",sidebar_position:115},sidebar:"documentationSidebar",previous:{title:"Install",permalink:"/running-node/install"},next:{title:"Networking",permalink:"/running-node/networking"}},c={},u=[],s={toc:u};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"test-network"},"Test Network"),(0,o.kt)("p",null,"Before you join the main bacalhau network - you can try things out locally first."),(0,o.kt)("p",null,"To do this we can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"bacalhau devstack")," command which is a quick way to get a 3 node cluster running locally."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"export PREDICTABLE_API_PORT=1\nbacalhau devstack\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"By settings ",(0,o.kt)("inlineCode",{parentName:"p"},"PREDICTABLE_API_PORT=1")," - it means the first node of our 3 node cluster will always listen on port ",(0,o.kt)("strong",{parentName:"p"},"20000"))),(0,o.kt)("p",null,"In another window - we can now export the following environment variables so our bacalhau client binary will connect to our local development cluster:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"export BACALHAU_API_HOST=127.0.0.1\nexport BACALHAU_API_PORT=20000\n")),(0,o.kt)("p",null,"We can now interact with bacalhau as normal - all jobs are being run by our local devstack cluster."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"bacalhau docker run ubuntu echo hello\nbacalhau list\n")))}p.isMDXComponent=!0}}]);