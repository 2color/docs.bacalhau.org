"use strict";(self.webpackChunkbacalhau_docs=self.webpackChunkbacalhau_docs||[]).push([[2528],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>b});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(r),b=o,f=p["".concat(c,".").concat(b)]||p[b]||m[b]||i;return r?n.createElement(f,a(a({ref:t},u),{},{components:r})):n.createElement(f,a({ref:t},u))}));function b(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},5778:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var n=r(3117),o=(r(7294),r(3905));const i={sidebar_label:"Resource Limits",sidebar_position:150},a="Resource Limits",l={unversionedId:"running-node/resource-limits",id:"running-node/resource-limits",title:"Resource Limits",description:"These are the flags that control the capacity of the bacalhau node and the limits for jobs that might be run.",source:"@site/docs/running-node/resource-limits.md",sourceDirName:"running-node",slug:"/running-node/resource-limits",permalink:"/running-node/resource-limits",draft:!1,editUrl:"https://github.com/bacalhau-project/docs.bacalhau.org/blob/main/docs/running-node/resource-limits.md",tags:[],version:"current",sidebarPosition:150,frontMatter:{sidebar_label:"Resource Limits",sidebar_position:150},sidebar:"documentationSidebar",previous:{title:"Job Selection",permalink:"/running-node/job-selection"},next:{title:"GPU Support",permalink:"/running-node/gpu"}},c={},s=[],u={toc:s};function m(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"resource-limits"},"Resource Limits"),(0,o.kt)("p",null,"These are the flags that control the capacity of the bacalhau node and the limits for jobs that might be run."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"  --limit-job-cpu string                 Job CPU core limit for single job (e.g. 500m, 2, 8).\n  --limit-job-gpu string                 Job GPU limit for single job (e.g. 1, 2, or 8).\n  --limit-job-memory string              Job Memory limit for single job  (e.g. 500Mb, 2Gb, 8Gb).\n  --limit-total-cpu string               Total CPU core limit to run all jobs (e.g. 500m, 2, 8).\n  --limit-total-gpu string               Total GPU limit to run all jobs (e.g. 1, 2, or 8).\n  --limit-total-memory string            Total Memory limit to run all jobs  (e.g. 500Mb, 2Gb, 8Gb).\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"--limit-total-*")," flags control the total system resources you want to give to the network.  If left blank - the system will attempt to detect these values automatically."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"--limit-job-*")," flags control the maximum amount of resources a single job can consume for it to be selected for execution."))}m.isMDXComponent=!0}}]);