"use strict";(self.webpackChunkbacalhau_docs=self.webpackChunkbacalhau_docs||[]).push([[457],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,h=d["".concat(l,".").concat(m)]||d[m]||p[m]||o;return n?a.createElement(h,i(i({ref:t},c),{},{components:n})):a.createElement(h,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var u=2;u<o;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8388:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],s={sidebar_label:"Image Processing",sidebar_position:3},l="Image Processing",u={unversionedId:"demos/image-processing",id:"demos/image-processing",title:"Image Processing",description:"Introduction",source:"@site/docs/demos/image-processing.md",sourceDirName:"demos",slug:"/demos/image-processing",permalink:"/demos/image-processing",editUrl:"https://github.com/bacalhau-project/docs.bacalhau.org/blob/main/docs/demos/image-processing.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_label:"Image Processing",sidebar_position:3},sidebar:"documentationSidebar",previous:{title:"List",permalink:"/demos/list"},next:{title:"Overview",permalink:"/running-node/overview"}},c=[{value:"Introduction",id:"introduction",children:[],level:2},{value:"Getting Started",id:"getting-started",children:[{value:"Prerequistes",id:"prerequistes",children:[],level:3},{value:"Launch the workload",id:"launch-the-workload",children:[],level:3}],level:2}],p={toc:c};function d(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"image-processing"},"Image Processing"),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"Often, you will need to process a number of images across an entire set hosted on IPFS. For example, the entire ",(0,o.kt)("a",{parentName:"p",href:"https://ipfs.io/ipfs/QmeZRGhe4PmjctYVSVHuEiA9oSXnqmYa4kQubSHgWbjv72"},"Landsat data dataset is hosted on IPFS"),". This is many thousands of images, it would be very convenient to run a job against the data without having to download it!"),(0,o.kt)("h2",{id:"getting-started"},"Getting Started"),(0,o.kt)("h3",{id:"prerequistes"},"Prerequistes"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Latest ",(0,o.kt)("inlineCode",{parentName:"li"},"bacalhau")," client installed; run ",(0,o.kt)("inlineCode",{parentName:"li"},"curl -sL https://get.bacalhau.org/install.sh | bash")," to upgrade an existing cli."),(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("inlineCode",{parentName:"li"},"yq")," yaml parser (official install instructions ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/mikefarah/yq/#install"},"here"),")")),(0,o.kt)("h3",{id:"launch-the-workload"},"Launch the workload"),(0,o.kt)("p",null,"In this example we will be working against a small ",(0,o.kt)("a",{parentName:"p",href:"https://ipfs.io/ipfs/QmeZRGhe4PmjctYVSVHuEiA9oSXnqmYa4kQubSHgWbjv72"},"subset of the dataset"),". We will go through a demo similar to what you may need to do at scale: resizing all the images down to 100x100px."),(0,o.kt)("p",null,"To get started with a new concept, ",(0,o.kt)("inlineCode",{parentName:"p"},"bacalhau docker run")," takes a ",(0,o.kt)("inlineCode",{parentName:"p"},"-v")," argument just like Docker, except the left hand side of the argument is a CID. This is a ",(0,o.kt)("em",{parentName:"p"},"data volume")," and can mount in an entire directory (instead of a single file)."),(0,o.kt)("p",null,"When you set this flag, it then ensures that CID is mounted into the container at the desired location as an input volume."),(0,o.kt)("p",null,"Data volumes also work on output - ",(0,o.kt)("inlineCode",{parentName:"p"},"bacalhau docker run")," also supports a ",(0,o.kt)("inlineCode",{parentName:"p"},"-o")," argument for output volumes. This is where you write the results of your job. See below for an example."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"bacalhau docker run \\\n  -v QmeZRGhe4PmjctYVSVHuEiA9oSXnqmYa4kQubSHgWbjv72:/input_images \\\n  dpokidov/imagemagick:7.1.0-47-ubuntu \\\n  -- magick mogrify -resize 100x100 -quality 100 -path /outputs '/input_images/*.jpg'\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"bacalhau describe JOB_ID | yq .Shards\n")),(0,o.kt)("p",null,"Replace ",(0,o.kt)("inlineCode",{parentName:"p"},"JOB_ID")," with the first part of the job id from the last step."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'- ShardIndex: 0\n  Nodes:\n    - Node: QmXaXu9N5GNetatsvwnTfQqNtSeKAD6uCmarbh3LMRYAcF\n      State: Cancelled\n      Status: ""\n      Verified: false\n      ResultID: ""\n    - Node: QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\n      State: Completed\n      Status: \'Got results proposal of length: 0\'\n      Verified: true\n      ResultID: bafybeidtitnyfotvcxa2tu7zjbe6a5mi4q4nkveiu5bm3zeyrzvt4fs7na\n')),(0,o.kt)("p",null,"Since the job state is complete, the job result can be downloaded using"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"bacalhau get JOB_ID\n")))}d.isMDXComponent=!0}}]);