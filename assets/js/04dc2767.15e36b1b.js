"use strict";(self.webpackChunkbacalhau_docs=self.webpackChunkbacalhau_docs||[]).push([[8041],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>h});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var i=n.createContext({}),u=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,l=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(a),h=o,m=d["".concat(i,".").concat(h)]||d[h]||c[h]||l;return a?n.createElement(m,r(r({ref:t},p),{},{components:a})):n.createElement(m,r({ref:t},p))}));function h(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=a.length,r=new Array(l);r[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:o,r[1]=s;for(var u=2;u<l;u++)r[u]=a[u];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},46:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>r,default:()=>c,frontMatter:()=>l,metadata:()=>s,toc:()=>u});var n=a(7462),o=(a(7294),a(3905));const l={sidebar_label:"YOLO-Object-Detection",sidebar_position:3},r="YOLOv5 (Object detection) on bacalhau",s={unversionedId:"examples/model-inference/object-detection-yolo5/index",id:"examples/model-inference/object-detection-yolo5/index",title:"YOLOv5 (Object detection) on bacalhau",description:"Open In Colab",source:"@site/docs/examples/model-inference/object-detection-yolo5/index.md",sourceDirName:"examples/model-inference/object-detection-yolo5",slug:"/examples/model-inference/object-detection-yolo5/",permalink:"/examples/model-inference/object-detection-yolo5/",draft:!1,editUrl:"https://github.com/bacalhau-project/docs.bacalhau.org/blob/main/docs/examples/model-inference/object-detection-yolo5/index.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_label:"YOLO-Object-Detection",sidebar_position:3},sidebar:"documentationSidebar",previous:{title:"Stable Diffusion - GPU",permalink:"/examples/model-inference/stable-diffusion-gpu/"},next:{title:"EasyOCR",permalink:"/examples/model-inference/EasyOCR/"}},i={},u=[{value:"<strong>Introduction</strong>",id:"introduction",level:2},{value:"<strong>Advantages of using bacalhau</strong>",id:"advantages-of-using-bacalhau",level:2},{value:"<strong>Running the job</strong>",id:"running-the-job",level:2},{value:"<strong>Uploading Images to IPFS</strong>",id:"uploading-images-to-ipfs",level:3},{value:"Pinata",id:"pinata",level:2},{value:"NFT.Storage (Recommneded Option)",id:"nftstorage-recommneded-option",level:3},{value:"<strong>Running the command</strong>",id:"running-the-command",level:3}],p={toc:u};function c(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"yolov5-object-detection-on-bacalhau"},"YOLOv5 (Object detection) on bacalhau"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://colab.research.google.com/github/bacalhau-project/examples/blob/main/model-inference/object-detection-yolo5/index.ipynb"},(0,o.kt)("img",{parentName:"a",src:"https://colab.research.google.com/assets/colab-badge.svg",alt:"Open In Colab"})),"\n",(0,o.kt)("a",{parentName:"p",href:"https://mybinder.org/v2/gh/bacalhau-project/examples/HEAD?labpath=model-inference/object-detection-yolo5/index.ipynb"},(0,o.kt)("img",{parentName:"a",src:"https://mybinder.org/badge.svg",alt:"Open In Binder"}))),(0,o.kt)("h2",{id:"introduction"},(0,o.kt)("strong",{parentName:"h2"},"Introduction")),(0,o.kt)("p",null,"Identification and localization of objects in photos is a computer vision task called \u2018object detection, several algorithms have emerged in the past few years to tackle the problem. One of the most popular algorithms to date for real-time object detection is ",(0,o.kt)("a",{parentName:"p",href:"https://towardsdatascience.com/yolo-you-only-look-once-real-time-object-detection-explained-492dc9230006"},"YOLO (You Only Look Once)"),", initially proposed by Redmond et. al ",(0,o.kt)("a",{parentName:"p",href:"https://arxiv.org/abs/1506.02640"},"[1]"),"."),(0,o.kt)("p",null,"Unfortunately, many of these models require enormous amounts of training materials to get high-quality results out of the model. For many organizations looking to run object detection, they may not have access to well-labeled training data, limiting the utility of these models. However, the advent of sharing pre-trained models to do inference, without training the model, offers the best of both worlds: better results with less or no training."),(0,o.kt)("p",null,"In this tutorial you will perform an end-to-end object detection inference,"),(0,o.kt)("p",null,"using the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ultralytics/yolov5/wiki/Docker-Quickstart"},"YOLOv5 Docker Image developed by Ultralytics.")),(0,o.kt)("p",null,"Identification and localization of objects in photos is a computer vision task called \u2018object detection, several algorithms have emerged in the past few years to tackle the problem. One of the most popular algorithms to date for real-time object detection is ",(0,o.kt)("a",{parentName:"p",href:"https://towardsdatascience.com/yolo-you-only-look-once-real-time-object-detection-explained-492dc9230006"},"YOLO (You Only Look Once)"),", initially proposed by Redmond et. al ",(0,o.kt)("a",{parentName:"p",href:"https://arxiv.org/abs/1506.02640"},"[1]"),"."),(0,o.kt)("p",null,"Unfortunately, many of these models require enormous amounts of training materials to get high-quality results out of the model. For many organizations looking to run object detection, they may not have access to well-labeled training data, limiting the utility of these models. However, the advent of sharing pre-trained models to do inference, without training the model, offers the best of both worlds: better results with less or no training."),(0,o.kt)("p",null,"In this tutorial you will perform an end-to-end object detection inference,"),(0,o.kt)("p",null,"using the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ultralytics/yolov5/wiki/Docker-Quickstart"},"YOLOv5 Docker Image developed by Ultralytics.")),(0,o.kt)("h2",{id:"advantages-of-using-bacalhau"},(0,o.kt)("strong",{parentName:"h2"},"Advantages of using bacalhau")),(0,o.kt)("p",null,"Using Bacalhau you can do the Object Detection inference on GPUs, and you don\u2019t need to have all the images stored on your local machine they can be stored on IPFS "),(0,o.kt)("p",null,"Since the outputs are stored on IPFS you don\u2019t need to download them on your local machine"),(0,o.kt)("p",null,"Insalling bacalhau"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl -sL https://get.bacalhau.org/install.sh | bash\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Your system is linux_amd64\nNo BACALHAU detected. Installing fresh BACALHAU CLI...\nGetting the latest BACALHAU CLI...\nInstalling v0.2.3 BACALHAU CLI...\nDownloading https://github.com/filecoin-project/bacalhau/releases/download/v0.2.3/bacalhau_v0.2.3_linux_amd64.tar.gz ...\nDownloading sig file https://github.com/filecoin-project/bacalhau/releases/download/v0.2.3/bacalhau_v0.2.3_linux_amd64.tar.gz.signature.sha256 ...\nVerified OK\nExtracting tarball ...\nNOT verifying Bin\nbacalhau installed into /usr/local/bin successfully.\nClient Version: v0.2.3\nServer Version: v0.2.3\n")),(0,o.kt)("h2",{id:"running-the-job"},(0,o.kt)("strong",{parentName:"h2"},"Running the job")),(0,o.kt)("p",null,"To get started we run object detection on images already present inside the container"),(0,o.kt)("p",null,"If you want to use your custom images as an input please refer ",(0,o.kt)("a",{parentName:"p",href:"#Uploading-Images-to-IPFS"},"Using custom Images as an input")),(0,o.kt)("p",null,"Command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"}," bacalhau docker run \\\n--gpu 1   \\\n--timeout 3600 \\\n--wait-timeout-secs 3600 \\\n-u https://github.com/ultralytics/yolov5/releases/download/v6.2/yolov5s.pt:/usr/src/app/yolov5s.pt \\\nultralytics/yolov5:latest \\\n-- /bin/bash -c 'python detect.py --weights yolov5s.pt --source $(pwd)/data/images --project ../../../outputs'\n")),(0,o.kt)("p",null,"Structure of the command:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Specify the command",(0,o.kt)("inlineCode",{parentName:"li"}," bacalhau docker run")," which is equivalent to docker run"),(0,o.kt)("li",{parentName:"ul"},"--gpu 1 specify the number of GPUs"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-u")," you can select the weights that you want from here ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/ultralytics/yolov5/releases"},"yolov5 release page"))),(0,o.kt)("p",null,"the model requires weights for it to run, so it downloads the weights from github but since bacalhau doesn\u2019t have networking enabled, you need to mount the weights and mount them to the pwd which in this case is /usr/src/app, so we specify the mount path /usr/src/app/yolov5s.pt"),(0,o.kt)("p",null,"You can also provide your own weights, "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ultralytics/yolov5:latest")," specify the container image you want to use"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-- /bin/bash -c")," here we specify the command we want to execute")),(0,o.kt)("p",null,"we will run the script detect.py which is for object detection"),(0,o.kt)("p",null,"Specify the path to the weights and source of the images "),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"--project")," here specify the output volume which you want to save to bacalhau   mounts an output volume called \u2018outputs\u2019 so we save the outputs there, for more flags refer ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ultralytics/yolov5/blob/master/detect.py#L3-#L25"},"yolov5/detect.py at master")," "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"bacalhau docker run \\\n--gpu 1 \\\n--timeout 3600 \\\n--wait-timeout-secs 3600 \\\n--wait \\\n--wait-timeout-secs 1000 \\\n--id-only \\\n-u https://github.com/ultralytics/yolov5/releases/download/v6.2/yolov5s.pt \\\nultralytics/yolov5:latest \\\n-- /bin/bash -c 'python detect.py --weights ../../../inputs/yolov5s.pt --source $(pwd)/data/images --project ../../../outputs'\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"%env JOB_ID={job_id}\n")),(0,o.kt)("p",null,"This should output a UUID (like ",(0,o.kt)("inlineCode",{parentName:"p"},"59c59bfb-4ef8-45ac-9f4b-f0e9afd26e70"),"). This is the ID of the job that was created. You can check the status of the job with the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"bacalhau list --id-filter ${JOB_ID}\n")),(0,o.kt)("p",null,'Where it says "',(0,o.kt)("inlineCode",{parentName:"p"},"Completed"),'", that means the job is done, and we can get the results.'),(0,o.kt)("p",null,"To find out more information about your job, run the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"bacalhau describe ${JOB_ID}\n")),(0,o.kt)("p",null,"Since there is no error we can\u2019t see any error instead we see the state of our job to be complete, that means\nwe can download the results!\nwe create a temporary directory to save our results"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir results\n")),(0,o.kt)("p",null,"To Download the results of your job, run "),(0,o.kt)("hr",null),(0,o.kt)("p",null,"the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"bacalhau get  ${JOB_ID} --output-dir results\n")),(0,o.kt)("p",null,"After the download has finished you should\nsee the following contents in results directory"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ls results/\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"shards  stderr  stdout  volumes\n")),(0,o.kt)("p",null,"The structure of the files and directories will look like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},".\n\u251c\u2500\u2500 shards\n\u2502   \u2514\u2500\u2500 job-59c59bfb-4ef8-45ac-9f4b-f0e9afd26e70-shard-0-host-QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\n\u2502   \u251c\u2500\u2500 exitCode\n\u2502   \u251c\u2500\u2500 stderr\n\u2502   \u2514\u2500\u2500 stdout\n\u251c\u2500\u2500 stderr\n\u251c\u2500\u2500 stdout\n\u2514\u2500\u2500 volumes\n\u2514\u2500\u2500 outputs\n\u251c\u2500\u2500 bus.jpg\n\u2514\u2500\u2500 zidane.jpg\n")),(0,o.kt)("p",null,"The Folder were our labelled images are stored is /volumes/outputs"),(0,o.kt)("p",null,"the outputs of your job will be downloaded in volumes/outputs/"),(0,o.kt)("p",null,"Viewing the results image bus.jpg\n",(0,o.kt)("img",{parentName:"p",src:"https://i.imgur.com/0Zk3zNz.jpg",alt:null})),(0,o.kt)("h1",{id:"using-custom-images-as-an-input"},"Using custom Images as an input"),(0,o.kt)("p",null,"To run Object Detection with your own images firstly you need to already have Images stored on IPFS/Filecoin or upload the Images to IPFS/FIlecoin"),(0,o.kt)("p",null,"In this command we are using the ",(0,o.kt)("a",{parentName:"p",href:"https://www.kaggle.com/datasets/f445f341fc5e3ab58757efa983a38d6dc709de82abd1444c8817785ecd42a1ac"},"Cyclist Dataset for Object Detection | Kaggle")," dataset "),(0,o.kt)("p",null,"The weights can be downloaded from this link ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ultralytics/yolov5/releases/download/v6.2/yolov5s.pt"},"YOLOv5s")," or you can choose your own weights from ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ultralytics/yolov5/releases"},"yolov5 release page")," or even upload your own custom weights"),(0,o.kt)("h3",{id:"uploading-images-to-ipfs"},(0,o.kt)("strong",{parentName:"h3"},"Uploading Images to IPFS")),(0,o.kt)("p",null,"To test whether if our script works we upload 10 Images of the whole dataset along with weights"),(0,o.kt)("p",null,"The directory structure of our dataset should look like"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"datasets\n\u251c\u2500\u2500 008710.jpg\n\u251c\u2500\u2500 008711.jpg\n\u251c\u2500\u2500 008712.jpg\n\u251c\u2500\u2500 008713.jpg\n\u251c\u2500\u2500 008714.jpg\n\u251c\u2500\u2500 008715.jpg\n\u251c\u2500\u2500 008716.jpg\n\u251c\u2500\u2500 008717.jpg\n\u251c\u2500\u2500 008718.jpg\n\u251c\u2500\u2500 008719.jpg\n\u2514\u2500\u2500 yolov5s.pt\n")),(0,o.kt)("p",null,"Uploading datasets directory to IPFS using the ipfs cli (Not recommended)"),(0,o.kt)("p",null,"we run the following command for that"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ ipfs add -r images-10/\nadded QmaoAngi85Rr3na1xSUdbC4F9Qv3CsT75KZUs7mVfdqQRX images-10/008710.jpg\nadded QmbTP6J9eAXpDvxLopH6GmNmgjR7WsJHdvhdQQ4iKmZdXh images-10/008711.jpg\nadded QmedfJnxJkZp2wQ5XNr7fbo4T7upr2eNTSJSrVceMU7JtY images-10/008712.jpg\nadded QmYHsXG1aR46PCPtgjZ1zQuFs3Mv8sFDcgFg73LhrHUKnf images-10/008713.jpg\nadded QmawStm5oDn4VPKsn9CAorAzJRfZKqsJoTe4n5TyosifAq images-10/008714.jpg\nadded QmU3Qim3o7BhTsUee68EyzxrTDjJzgQUUTgBZ6SQfuSBgL images-10/008715.jpg\nadded Qmbyhz2HTgiwo4dA5w4p2GcksTtxVmpcfGzcTCGz4mBBce images-10/008716.jpg\nadded QmQqimRW8Ng1z2dsMsKH1KBHy637d2H88QAzBXecavwT4a images-10/008717.jpg\nadded QmYsdTXKYsSriVG9a5Khv3qyt5oZog8Jdc82tvNunyybsa images-10/008718.jpg\nadded QmXHpTMvxARbEufWPDxu6xfSAC2QZGqW6xx492xCsL5Vob images-10/008719.jpg\nadded QmTv8e1W4q19CvX46fBxeit3SqaSB4ERcjcJUR4UnHyDoX images-10/yolov5s.pt\nadded QmVkqsJySdytkY75zdQGNQHqJc4naXtMDAVTD5gwZShAmd images-10\n 15.77 MiB / 15.77 MiB [=======================================================================================] 100.00%\n")),(0,o.kt)("p",null,"Since the data Uploaded To IPFS isn\u2019t pinned or will be garbage collected"),(0,o.kt)("p",null,"The Data needs to be Pinned, Pinning is the mechanism that allows you to tell IPFS to always keep a given object somewhere, the default being your local node, though this can be different if you use a third-party remote pinning service."),(0,o.kt)("p",null,"There a different pinning services available you can you any one of them"),(0,o.kt)("h2",{id:"pinata"},(0,o.kt)("a",{parentName:"h2",href:"https://app.pinata.cloud/"},"Pinata")),(0,o.kt)("p",null,"Click on the upload folder button"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://i.imgur.com/crnkrwy.png",alt:null})),(0,o.kt)("p",null,"After the Upload has finished copy the CID"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://i.imgur.com/2Zs884R.png",alt:null})),(0,o.kt)("h3",{id:"nftstorage-recommneded-option"},(0,o.kt)("a",{parentName:"h3",href:"https://nft.storage/"},"NFT.Storage")," (Recommneded Option)"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://nft.storage/docs/how-to/nftup/"},"Upload files and directories with NFTUp")," "),(0,o.kt)("p",null,"To upload your dataset using NFTup just drag and drop your directory it will upload it to IPFS"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://i.imgur.com/g3VM2Kp.png",alt:null})),(0,o.kt)("p",null,"Copy the CID in this case it is bafybeicyuddgg4iliqzkx57twgshjluo2jtmlovovlx5lmgp5uoh3zrvpm"),(0,o.kt)("p",null,"You can view you uploaded dataset by clicking on the Gateway URL"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://bafybeicyuddgg4iliqzkx57twgshjluo2jtmlovovlx5lmgp5uoh3zrvpm.ipfs.nftstorage.link/"},"https://bafybeicyuddgg4iliqzkx57twgshjluo2jtmlovovlx5lmgp5uoh3zrvpm.ipfs.nftstorage.link/")),(0,o.kt)("h3",{id:"running-the-command"},(0,o.kt)("strong",{parentName:"h3"},"Running the command")),(0,o.kt)("p",null,"What the -v flag does"),(0,o.kt)("p",null,"-v flag is used to mount your IPFS CIDs to the container"),(0,o.kt)("p",null,"So if you want to mount your own CID "),(0,o.kt)("p",null,"-v ","<","THE-CID-YOU-COPIED>:/","<","PATH-OF-DIRECTORY-IN-WHICH-YOU-WANT-TO-MOUNT-THE-DATASET>"),(0,o.kt)("p",null,"In this case it will look like where we mount the CID to /datasets folder"),(0,o.kt)("p",null,"-v bafybeicyuddgg4iliqzkx57twgshjluo2jtmlovovlx5lmgp5uoh3zrvpm:/datasets"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"bacalhau docker run \\\n--gpu 1 \\\n--timeout 3600 \\\n--wait-timeout-secs 3600 \\\n-v bafybeicyuddgg4iliqzkx57twgshjluo2jtmlovovlx5lmgp5uoh3zrvpm:/datasets \\\nultralytics/yolov5:latest \\\n-- /bin/bash -c 'python detect.py --weights ../../../datasets/yolov5s.pt --source ../../../datasets --project  ../../../outputs'\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"bacalhau docker run \\\n--gpu 1 \\\n--timeout 3600 \\\n--wait-timeout-secs 3600 \\\n--wait \\\n--wait-timeout-secs 1000 \\\n--id-only \\\n-v bafybeicyuddgg4iliqzkx57twgshjluo2jtmlovovlx5lmgp5uoh3zrvpm:/datasets \\\nultralytics/yolov5:latest \\\n-- python detect.py --weights ../../../datasets/yolov5s.pt --source ../../../datasets --project  ../../../outputs\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"dbdf569f-7eec-4acd-b469-bd0a1a8005da\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"%env JOB_ID={job_id}\n")),(0,o.kt)("p",null,"This should output a UUID (like ",(0,o.kt)("inlineCode",{parentName:"p"},"1f113734-cb05-4331-b049-b9b5b102259a")," ). This is the ID of the job that was created. You can check the status of the job with the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"bacalhau list --id-filter ${JOB_ID}\n")),(0,o.kt)("p",null,"To Download the results of your job, run the following command:"),(0,o.kt)("p",null,"we create a temporary directory to save our results"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir custom-results\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"bacalhau get ${JOB_ID} --output-dir custom-results\n")),(0,o.kt)("p",null,"The structure of the files and directories will look like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\u251c\u2500\u2500 shards\n\u2502   \u2514\u2500\u2500 job-1f113734-cb05-4331-b049-b9b5b102259a-shard-0-host-QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\n\u2502   \u251c\u2500\u2500 exitCode\n\u2502   \u251c\u2500\u2500 stderr\n\u2502   \u2514\u2500\u2500 stdout\n\u251c\u2500\u2500 stderr\n\u251c\u2500\u2500 stdout\n\u2514\u2500\u2500 volumes\n\u2514\u2500\u2500 outputs\n\u251c\u2500\u2500 008710.jpg\n\u251c\u2500\u2500 008711.jpg\n\u251c\u2500\u2500 008712.jpg\n\u251c\u2500\u2500 008713.jpg\n\u251c\u2500\u2500 008714.jpg\n\u251c\u2500\u2500 008715.jpg\n\u251c\u2500\u2500 008716.jpg\n\u251c\u2500\u2500 008717.jpg\n\u251c\u2500\u2500 008718.jpg\n\u2514\u2500\u2500 008719.jpg\n")),(0,o.kt)("p",null,"The labeled images are at volumes/outputs"),(0,o.kt)("p",null,"If you don\u2019t want to download the results but still view them using a IPFS gateway "),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://cloudflare-ipfs.com/ipfs/bafybeiai3v7svitueeipqcohvelpxpcex5jtuep4wnezfqjknphuewwkoq"},"https://cloudflare-ipfs.com/ipfs/bafybeiai3v7svitueeipqcohvelpxpcex5jtuep4wnezfqjknphuewwkoq")),(0,o.kt)("p",null," Just replace the CID with the CID that you got as a result from bacalhau list"),(0,o.kt)("p",null,"Running the same job on the whole dataset (13674 Images!)CID from the previous job"),(0,o.kt)("p",null,"Upload the whole dataset which contains 13674 images along with the weight file"),(0,o.kt)("p",null,"You can choose the methods mentioned above to upload your dataset directory"),(0,o.kt)("p",null,"And copy the CID bafybeifvpl2clsdy4rc72oi4iqlyyt347ms64kmmuqwuai5j2waurnsk5e"),(0,o.kt)("p",null,"Uploaded Dataset link: ",(0,o.kt)("a",{parentName:"p",href:"https://bafybeifvpl2clsdy4rc72oi4iqlyyt347ms64kmmuqwuai5j2waurnsk5e.ipfs.nftstorage.link/"},"https://bafybeifvpl2clsdy4rc72oi4iqlyyt347ms64kmmuqwuai5j2waurnsk5e.ipfs.nftstorage.link/")),(0,o.kt)("p",null,"To run on the whole dataset we just need to replace the input CID in the -v flag with the CID of the whole dataset"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"}," bacalhau docker run \\\n--gpu 1 \\\n--timeout 3600 \\\n--wait-timeout-secs 3600 \\\n-v bafybeifvpl2clsdy4rc72oi4iqlyyt347ms64kmmuqwuai5j2waurnsk5e:/datasets \\\nultralytics/yolov5:latest \\\n-- /bin/bash -c 'python detect.py --weights ../../../datasets/yolov5s.pt --source ../../../datasets  --project  ../../../outputs'\n")),(0,o.kt)("hr",null),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"165000 Images (27GB)")),(0,o.kt)("p",null,"Dataset link:"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://bafybeiekic3o3tuefajvlqeiyvvbq5kkr2g27qivuawpbqva7frv42radm.ipfs.nftstorage.link/"},"https://bafybeiekic3o3tuefajvlqeiyvvbq5kkr2g27qivuawpbqva7frv42radm.ipfs.nftstorage.link/")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"bacalhau docker run \\\n--gpu 1 \\\n--timeout 3600 \\\n--wait-timeout-secs 3600 \\\n-v bafybeiekic3o3tuefajvlqeiyvvbq5kkr2g27qivuawpbqva7frv42radm:/datasets \\\nultralytics/yolov5:latest \\\n-- /bin/bash -c 'python detect.py --weights ../../../datasets/yolov5s.pt --source ../../../datasets  --project  ../../../outputs'\n")))}c.isMDXComponent=!0}}]);